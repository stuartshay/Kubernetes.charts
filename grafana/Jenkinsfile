node('master') {
          String helm_repository = 'chartmuseum'
      String helm_package = 'chartmuseum/grafana'
      String helm_repository_api = 'https://helm.navigatorglass.com/api/charts'
      String helm_package_name = "grafana"
      String helm_package_version = "1.0"

    timestamps {

        stage('Git checkout') {
            def gitRepo = checkout scm
            String git_url = gitRepo.GIT_URL
            git_branch = gitRepo.GIT_BRANCH.tokenize('/')[-1]

            String git_commit_id = gitRepo.GIT_COMMIT
            String git_short_commit_id = "${git_commit_id[0..6]}"
            String buildTime = sh(returnStdout: true, script: "date +'%Y.%V'").trim()
            currentBuild.displayName = (buildTime + "." + currentBuild.number + "." + git_branch + "." + git_short_commit_id)
        }

        stage('chart-init'){
        dir("helm")
        {
           sh """
           pwd
           ls
           sed -i 's/000/${BUILD_ID}/g' $helm_package_name/Chart.yaml
           """
           }
        }


        stage('chart-lint') {

          echo ' ADD -- strict after fixing warnings'

          if (helm_push_nav_data.equalsIgnoreCase('true'))
          dir("helm/$helm_package_name")
          {
            echo "$git_branch"
              sh """
              helm lint ../$helm_package_name
              """
           }
        }

        stage('chart-package') {

            echo 'FIX navigator below'

          if (helm_push_nav_data.equalsIgnoreCase('true'))
          dir("helm/$helm_package_name")
          {
            def exists = fileExists "../$helm_package_name"
            if (exists) {
              sh """
              if [ `ls -1 navigator-* 2>/dev/null | wc -l ` -gt 0 ];
              then
                  rm -r navigator-*
              fi
              helm package ../$helm_package_name
              """
            } else {
              echo 'chart not found'
             }

               }
        }

        stage('chart-publish'){
        dir("helm/$helm_package_name")
        {
      final chart_to_push = sh(script: "ls  | grep $helm_package_name-*", returnStdout: true).trim()
           sh """
           curl --data-binary "@$chart_to_push" $helm_repository_api 
           """
           }
        }


      }
  }